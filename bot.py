import logging
import os
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters, ConversationHandler

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = "7993696802:AAHsaOyLkComr4mr2WsC-EgnB5jcHKjd7Ho"
MANAGER_CHAT_ID = os.getenv("MANAGER_CHAT_ID")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)

# –°–æ—Å—Ç–æ—è–Ω–∏—è
(ASK_NAME, ASK_PHONE, ASK_COMPANY, ASK_TARIFF) = range(4)

# –°—Ç–∞—Ä—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:", reply_markup=reply_markup
    )

# –û—Ç–º–µ–Ω–∞
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

# –ù–∞–∑–∞–¥
async def go_back(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await start(update, context)
    return ConversationHandler.END

# –í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è
async def handle_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    choice = update.message.text
    if choice == "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É":
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:", reply_markup=ReplyKeyboardRemove())
        return ASK_NAME
    elif choice == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º":
        await update.message.reply_text("–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
        return ConversationHandler.END
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return ConversationHandler.END

# –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
async def ask_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return ASK_PHONE

async def ask_company(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["phone"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:")
    return ASK_COMPANY

async def ask_tariff(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["company"] = update.message.text
    await update.message.reply_text(
        "üíº –¢–∞—Ä–∏—Ñ—ã: \n"
        "1. –°—Ç–∞—Ä—Ç ‚Äî –¥–æ 1 000 –∑–≤–æ–Ω–∫–æ–≤, 1 —Å—Ü–µ–Ω–∞—Ä–∏–π, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram, –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ ‚Äî 900 000 —Å—É–º/–º–µ—Å\n"
        "2. –ë–∏–∑–Ω–µ—Å ‚Äî –¥–æ 10 000 –∑–≤–æ–Ω–∫–æ–≤, 5 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, Telegram-–±–æ—Ç ‚Äî 8 100 000 —Å—É–º/–º–µ—Å\n"
        "3. –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π ‚Äî –¥–æ 100 000 –∑–≤–æ–Ω–∫–æ–≤, –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, API –∏ –º–µ–Ω–µ–¥–∂–µ—Ä ‚Äî 72 900 000 —Å—É–º/–º–µ—Å\n"
        "\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞:"
    )
    return ASK_TARIFF

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
async def finish(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["tariff"] = update.message.text
    user_data = context.user_data

    message = (
        f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n"
        f"üë§ –§–ò–û: {user_data['name']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}\n"
        f"üè¢ –ö–æ–º–ø–∞–Ω–∏—è: {user_data['company']}\n"
        f"üíº –¢–∞—Ä–∏—Ñ: {user_data['tariff']}"
    )

    await context.bot.send_message(chat_id=MANAGER_CHAT_ID, text=message)
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É.")
    return ConversationHandler.END

# –û—Å–Ω–æ–≤–Ω–æ–π
if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.TEXT & (~filters.COMMAND), handle_choice)],
        states={
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_phone)],
            ASK_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_company)],
            ASK_COMPANY: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_tariff)],
            ASK_TARIFF: [MessageHandler(filters.TEXT & ~filters.COMMAND, finish)],
        },
        fallbacks=[
            CommandHandler("start", start),
            CommandHandler("–Ω–∞–∑–∞–¥", go_back),
            CommandHandler("–æ—Ç–º–µ–Ω–∏—Ç—å", cancel),
        ],
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(conv_handler)
    app.add_handler(CommandHandler("–Ω–∞–∑–∞–¥", go_back))
    app.add_handler(CommandHandler("–æ—Ç–º–µ–Ω–∏—Ç—å", cancel))

    app.run_polling()

