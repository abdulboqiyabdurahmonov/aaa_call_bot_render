from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —ç—Ç–∞–ø–æ–≤ –¥–∏–∞–ª–æ–≥–∞
NAME, PHONE, COMPANY, TARIFF = range(4)

# ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã
GROUP_ID = -1002344973979

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [['–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', '–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º']]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! üëã\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:", reply_markup=reply_markup)

# –õ–æ–≥–∏–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É':
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
        return NAME
    elif text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º':
        await update.message.reply_text("–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
        return ConversationHandler.END
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é.")
        return ConversationHandler.END

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['name'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['phone'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏:")
    return COMPANY

async def get_company(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['company'] = update.message.text
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ:\n1. –°—Ç–∞—Ä—Ç\n2. –ë–∏–∑–Ω–µ—Å\n3. –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π")
    return TARIFF

async def get_tariff(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['tariff'] = update.message.text

    tariff_description = {
        "–°—Ç–∞—Ä—Ç": "–î–æ 1 000 –∑–≤–æ–Ω–∫–æ–≤ –≤ –º–µ—Å—è—Ü\n1 –≥–æ–ª–æ—Å–æ–≤–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π\n–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ Telegram\n–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫\nüíµ 900 000 —Å—É–º / –º–µ—Å",
        "–ë–∏–∑–Ω–µ—Å": "–î–æ 10 000 –∑–≤–æ–Ω–∫–æ–≤ –≤ –º–µ—Å—è—Ü\n–î–æ 5 —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤\n–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram-–±–æ—Ç–æ–º\nüíµ 8 100 000 —Å—É–º / –º–µ—Å",
        "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π": "–î–æ 100 000 –∑–≤–æ–Ω–∫–æ–≤ –≤ –º–µ—Å—è—Ü\n–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏\nAPI-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è, CRM\n–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä\nüíµ 72 900 000 —Å—É–º / –º–µ—Å"
    }

    name = context.user_data.get("name")
    phone = context.user_data.get("phone")
    company = context.user_data.get("company")
    tariff = context.user_data.get("tariff")

    message = (
        f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\n\n"
        f"üë§ –§–ò–û: {name}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üè¢ –ö–æ–º–ø–∞–Ω–∏—è: {company}\n"
        f"üì¶ –¢–∞—Ä–∏—Ñ: {tariff}\n\n"
        f"‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–∞—Ä–∏—Ñ–µ:\n{tariff_description.get(tariff, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')}"
    )

    await context.bot.send_message(chat_id=GROUP_ID, text=message)
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É.")
    return ConversationHandler.END

# –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω—ã
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

# –ö–æ–º–∞–Ω–¥–∞ –Ω–∞–∑–∞–¥
async def back(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥.")
    return ConversationHandler.END

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = ApplicationBuilder().token("7993696802:AAHsaOyLkComr4mr2WsC-EgnB5jcHKjd7Ho").build()

conv_handler = ConversationHandler(
    entry_points=[MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler)],
    states={
        NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
        PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
        COMPANY: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_company)],
        TARIFF: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_tariff)],
    },
    fallbacks=[CommandHandler("cancel", cancel), CommandHandler("back", back)],
)

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("cancel", cancel))
app.add_handler(CommandHandler("back", back))
app.add_handler(conv_handler)

# –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Webhook
app.run_webhook(
    listen="0.0.0.0",
    port=8080,
    webhook_url="https://aaa-call-bot.onrender.com"  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ —ç—Ç–∞ —Å—Å—ã–ª–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞!
)
