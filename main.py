import os
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    Application, CommandHandler, MessageHandler, ConversationHandler,
    ContextTypes, filters
)
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
GROUP_ID = -1002344973979  # ID –≤–∞—à–µ–π Telegram-–≥—Ä—É–ø–ø—ã

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
FULL_NAME, PHONE, COMPANY, TARIFF = range(4)

# –ö–Ω–æ–ø–∫–∏
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"), KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")]
    ],
    resize_keyboard=True
)

tariff_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        ["–°—Ç–∞—Ä—Ç", "–ë–∏–∑–Ω–µ—Å", "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π"],
        ["/–Ω–∞–∑–∞–¥", "/–æ—Ç–º–µ–Ω–∏—Ç—å"]
    ],
    resize_keyboard=True
)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TRIPLEA!\n–ù–∞–∂–º–∏—Ç–µ ¬´–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
        reply_markup=main_keyboard
    )


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=main_keyboard)
    return ConversationHandler.END


async def back(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_keyboard)
    return ConversationHandler.END


async def start_form(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
    return FULL_NAME


async def get_full_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["full_name"] = update.message.text
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return PHONE


async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["phone"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏:")
    return COMPANY


async def get_company(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["company"] = update.message.text
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ:",
        reply_markup=tariff_keyboard
    )
    return TARIFF


async def get_tariff(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["tariff"] = update.message.text

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
    full_name = context.user_data["full_name"]
    phone = context.user_data["phone"]
    company = context.user_data["company"]
    tariff = context.user_data["tariff"]

    message = (
        "üì• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:*\n\n"
        f"üë§ *–§–ò–û:* {full_name}\n"
        f"üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {phone}\n"
        f"üè¢ *–ö–æ–º–ø–∞–Ω–∏—è:* {company}\n"
        f"üì¶ *–¢–∞—Ä–∏—Ñ:* {tariff}"
    )

    await context.bot.send_message(chat_id=GROUP_ID, text=message, parse_mode="Markdown")
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.", reply_markup=main_keyboard)

    return ConversationHandler.END


def main():
    app = Application.builder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"), start_form)],
        states={
            FULL_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_full_name)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
            COMPANY: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_company)],
            TARIFF: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_tariff)],
        },
        fallbacks=[
            CommandHandler("–æ—Ç–º–µ–Ω–∏—Ç—å", cancel),
            CommandHandler("–Ω–∞–∑–∞–¥", back),
        ]
    )

    # –ö–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("–æ—Ç–º–µ–Ω–∏—Ç—å", cancel))
    app.add_handler(CommandHandler("–Ω–∞–∑–∞–¥", back))
    app.add_handler(conv_handler)

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()


if __name__ == "__main__":
    main()
